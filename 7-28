#!/bin/bash

set -euo pipefail

# === Input Variables ===
NETWORK_ID="23f15701-a72f-4d9c-8f2f-de8a470e1514"
SECURITY_GROUP_ID="dfcded29-7ee4-4f19-bb35-30773d62a2f4"
SNAPSHOT_ID="e355ab4b-a2f5-4a25-a0c8-2523816c9678"
KEY_NAME="c30-drm-keypair"

FLAVOR_NAME="m8g.xlarge"
VM_NAME="test-gpu-vm"
PORT_NAME="test-gpu-port"
VOLUME_NAME="test-gpu-vol"

echo "===== üöÄ Creating VM: $VM_NAME ====="

# === Step 1: Dynamically Find Subnet ===
echo "[*] Looking up subnet in network $NETWORK_ID..."
SUBNET_ID=$(openstack subnet list --network "$NETWORK_ID" -f json | jq -r '.[0].ID')

if [ -z "$SUBNET_ID" ]; then
  echo "‚ùå No subnet found under network $NETWORK_ID. Aborting."
  exit 1
fi

echo "[+] Found subnet: $SUBNET_ID"

# === Step 2: Create Port ===
echo "[*] Creating port..."
PORT_ID=$(openstack port create \
  --network "$NETWORK_ID" \
  --fixed-ip subnet="$SUBNET_ID" \
  --security-group "$SECURITY_GROUP_ID" \
  --enable "$PORT_NAME" -f json | jq -r '.id')

echo "[+] Created port: $PORT_ID"

# === Step 3: Dynamically Find Available Floating IP ===
echo "[*] Finding unassigned floating IP..."
FLOATING_IP_ID=$(openstack floating ip list --status DOWN --network "$NETWORK_ID" -f json | jq -r '.[0].ID')

if [ -z "$FLOATING_IP_ID" ] || [ "$FLOATING_IP_ID" == "null" ]; then
  echo "‚ùå No available floating IP in network $NETWORK_ID. Aborting."
  exit 1
fi

echo "[+] Found unassigned floating IP: $FLOATING_IP_ID"

# === Step 4: Associate Floating IP with Port ===
echo "[*] Associating floating IP $FLOATING_IP_ID with port $PORT_ID..."
openstack floating ip set --port "$PORT_ID" "$FLOATING_IP_ID"
echo "[+] Floating IP associated."

# === Step 5: Create Bootable Volume ===
echo "[*] Creating bootable volume..."
VOLUME_ID=$(openstack volume create -f json \
  --snapshot "$SNAPSHOT_ID" \
  --size 125 \
  --bootable "$VOLUME_NAME" | jq -r '.id')

echo "[+] Created volume: $VOLUME_ID"

# === Step 6: Wait for Volume to Become Available ===
echo "[*] Waiting for volume to become available..."
while true; do
  STATUS=$(openstack volume show "$VOLUME_ID" -f value -c status)
  if [[ "$STATUS" == "available" ]]; then
    break
  fi
  echo "[~] Volume status: $STATUS ‚Äî waiting..."
  sleep 5
done

# === Step 7: Launch the VM ===
echo "[*] Creating server..."
openstack server create \
  --flavor "$FLAVOR_NAME" \
  --volume "$VOLUME_ID" \
  --port "$PORT_ID" \
  --key-name "$KEY_NAME" \
  --wait "$VM_NAME"

echo "‚úÖ VM '$VM_NAME' created successfully with floating IP: $FLOATING_IP_ID"




echo "[DEBUG] Port ID: $PORT_ID"
echo "[DEBUG] Volume ID: $VOLUME_ID"
echo "[DEBUG] Running command:"
echo openstack server create \
  --flavor "$FLAVOR_NAME" \
  --volume "$VOLUME_ID" \
  --port "$PORT_ID" \
  --key-name "$KEY_NAME" \
  --wait "$VM_NAME"

