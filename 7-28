#!/bin/bash

# Inputs from Terraform variables or known values
NETWORK_ID="23f15701-a72f-4d9c-8f2f-de8a470e1514"
FLOATING_IP_ID="77d4ae8b-9792-495c-bb7b-aaa5569da518"
SECURITY_GROUP_ID="dfcded29-7ee4-4f19-bb35-30773d62a2f4"
SNAPSHOT_ID="e355ab4b-a2f5-4a25-a0c8-2523816c9678"
KEY_NAME="c30-drm-keypair"

# Static Config
FLAVOR_NAME="m8g.xlarge"
VM_NAME="test-gpu-vm"
PORT_NAME="test-gpu-port"
VOLUME_NAME="test-gpu-vol"

echo "===== Creating OpenStack VM: $VM_NAME ====="

# Step 1: Create Port (no fixed subnet needed if dynamic IP is okay)
PORT_ID=$(openstack port create \
  --network "$NETWORK_ID" \
  --security-group "$SECURITY_GROUP_ID" \
  "$PORT_NAME" -f json | jq -r '.id')

echo "[+] Created Port: $PORT_ID"

# Step 2: Associate existing floating IP to the port
openstack floating ip set --port "$PORT_ID" "$FLOATING_IP_ID"
echo "[+] Associated Floating IP $FLOATING_IP_ID with port $PORT_ID"

# Step 3: Create bootable volume from snapshot
VOLUME_ID=$(openstack volume create -f json \
  --snapshot "$SNAPSHOT_ID" \
  --size 125 \
  --bootable "$VOLUME_NAME" | jq -r '.id')

echo "[+] Created Volume: $VOLUME_ID"

# Wait until volume becomes 'available'
while true; do
  STATUS=$(openstack volume show "$VOLUME_ID" -f value -c status)
  if [ "$STATUS" = "available" ]; then
    echo "[+] Volume is available."
    break
  else
    echo "[*] Waiting for volume $VOLUME_ID to become available..."
    sleep 5
  fi
done

# Step 4: Create the VM
openstack server create \
  --flavor "$FLAVOR_NAME" \
  --volume "$VOLUME_ID" \
  --port "$PORT_ID" \
  --key-name "$KEY_NAME" \
  --wait "$VM_NAME"

echo "âœ… VM '$VM_NAME' created successfully and attached to Floating IP."
