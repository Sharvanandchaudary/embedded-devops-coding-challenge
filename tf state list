{
  "tags": {
    "hyperscaler": "rhops"
  },
  "environment": "test-2",
  "name_prefix": "to01",
  "openstack_project_id": "59c2d928ef6046069a0175d74dc3dc23",
  "openstack_project_name": "cc-test-oa-chm01-prj",
  "release" : "v2.0.10",
  "netapp_version": "2.0.1",
  "settings": {
    "hybrid_deployment": false,
    "aws_chamber_tfstate_key": "cloud30-chambers/config/envs/non-prod/dev/dc01/terraform.tfstate",
    "cc_chamber_json_s3_location": "s3://cadencecloud-mirrors-eu-central-1/projects/orchestrator/c30-cust/to01/awscbtb02slurm01/to01.json",
    "cc_hub_tfstate_key": "cloud30-openstack-shr/config/envs/non-prod/qa/test-2/to00/terraform.tfstate",
    "drm_cidr": "10.3.120.0/23",
    "aws_admin_cidr": "10.3.64.0/27",
    "aws_chamber_cidr": "10.3.66.0/23",
    "openstack_mgmt_ip": "10.107.178.0/24"
  },
  "compute": {
    "compute_details": {
      "node_details": {
        "ls01": {
          "image": "71e5ed26-05bc-4e6e-b107-d1eb3ab65a7f",
          "volume_size": 100,
          "enabled" : false,
          "additional_volumes" : "ls01_vol"
          
        },
        "haproxy": {
          "image": "fe8ba8c6-9c98-4f45-ba96-802ef7a37391",
          "volume_size": 100,
          "enabled" : false,
          "additional_volumes" : null
          
        },
        "wrk01": {
          "name": "wrk01",
          "instance_type": "baremetal",
          "image": "34504ee6-d6ed-4ba7-a366-647bfee3cd49",
          "volume_size": 100,
          "additional_volumes": null,
          "eni_name": "wrk01-eni"
        }
      }
    }
  },
  "storage": {
    "volume_type": "netapp_iscsi_enc",
    "ebs_volume_details": {
      "ls01_vol": {
        "scratch": {
          "disk": "tmp",
          "volume_size": 100,
          "device": "/dev/vdb"
        }
      }
    }
  },
  "networking": {
    "provider_vlan" : "1168",
    "provider_cidr" : "10.107.168.0/23",
    "baremetal" : {
      "network_id": "5c79a1a8-b294-4435-a2e6-ef1b992735d3",
      "subnet_id" : "c83e54b1-822e-4931-ac73-b731d1f6c966"
    },
    "customer_vpc": {
      "cidr_block": "10.154.180.0/23"
    },
    "customer_eni_mapping": {
      "haproxy-eni": {
        "ip": {
          "public_ip": "10.107.168.52",
          "hostnum": 52
        }
      },
      "wrk01-eni": {
        "name": "wrk01-eni",
        "subnet": "ComputeSubnet2a",
        "security_groups": [
          "Chm-AccessFromUtlSvr",
          "PrivateSG",
          "CLA-SG",
          "Platform-SG"
        ],
        "ip": {
          "private_ip" : "$${cc_chamber_internal_cidr}",
          "public_ip"  : "$${cc_chamber_cidr}",
          "hostnum" : 101
        }
      }
    }
  }
}



state list
15:06:44.055 WARN   Using `terragrunt.hcl` as the root of Terragrunt configurations is an anti-pattern, and no longer recommended. In a future version of Terragrunt, this will result in an error. You are advised to use a differently named file like `root.hcl` instead. For more information, see https://terragrunt.gruntwork.io/docs/migrate/migrating-from-root-terragrunt-hcl
data.aws_secretsmanager_secret.mirror_secrets
data.aws_secretsmanager_secret_version.aws_current
data.terraform_remote_state.cc_admin_chamber
module.aws_utils.data.aws_regions.complete
module.aws_utils.data.aws_regions.default
module.aws_utils.data.aws_regions.not_opted_in
module.aws_utils.data.aws_regions.opted_in
module.network.openstack_networking_network_v2.generic
module.network.openstack_networking_subnet_v2.subnet["ComputeSubnet2a"]
module.network.openstack_networking_subnet_v2.subnet["ComputeSubnet2b"]
module.network.openstack_networking_subnet_v2.subnet["ComputeSubnet2c"]
module.network.openstack_networking_subnet_v2.subnet["StorageSubnet"]
module.router.data.openstack_networking_subnet_v2.subnets["0"]
module.router.data.openstack_networking_subnet_v2.subnets["1"]
module.router.data.openstack_networking_subnet_v2.subnets["2"]
module.router.data.openstack_networking_subnet_v2.subnets["3"]
module.security-groups["CLA-SG"].openstack_networking_secgroup_rule_v2.ingress_rules["100000"]
module.security-groups["CLA-SG"].openstack_networking_secgroup_rule_v2.ingress_rules["100010"]
module.security-groups["CLA-SG"].openstack_networking_secgroup_rule_v2.ingress_rules["100020"]
module.security-groups["CLA-SG"].openstack_networking_secgroup_rule_v2.ingress_rules["100030"]
module.security-groups["CLA-SG"].openstack_networking_secgroup_rule_v2.ingress_rules["101000"]
module.security-groups["CLA-SG"].openstack_networking_secgroup_rule_v2.ingress_rules["101010"]
module.security-groups["CLA-SG"].openstack_networking_secgroup_rule_v2.ingress_rules["101020"]
module.security-groups["CLA-SG"].openstack_networking_secgroup_rule_v2.ingress_rules["101030"]
module.security-groups["CLA-SG"].openstack_networking_secgroup_v2.sg
module.security-groups["Chm-AccessFromUtlSvr"].openstack_networking_secgroup_rule_v2.ingress_rules["100000"]
module.security-groups["Chm-AccessFromUtlSvr"].openstack_networking_secgroup_rule_v2.ingress_rules["100010"]
module.security-groups["Chm-AccessFromUtlSvr"].openstack_networking_secgroup_rule_v2.ingress_rules["101000"]
module.security-groups["Chm-AccessFromUtlSvr"].openstack_networking_secgroup_rule_v2.ingress_rules["101010"]
module.security-groups["Chm-AccessFromUtlSvr"].openstack_networking_secgroup_rule_v2.ingress_rules["103000"]
module.security-groups["Chm-AccessFromUtlSvr"].openstack_networking_secgroup_rule_v2.ingress_rules["103010"]
module.security-groups["Chm-AccessFromUtlSvr"].openstack_networking_secgroup_rule_v2.ingress_rules["103020"]
module.security-groups["Chm-AccessFromUtlSvr"].openstack_networking_secgroup_rule_v2.ingress_rules["103030"]
module.security-groups["Chm-AccessFromUtlSvr"].openstack_networking_secgroup_rule_v2.ingress_rules["103040"]
module.security-groups["Chm-AccessFromUtlSvr"].openstack_networking_secgroup_rule_v2.ingress_rules["103050"]
module.security-groups["Chm-AccessFromUtlSvr"].openstack_networking_secgroup_rule_v2.ingress_rules["103060"]
module.security-groups["Chm-AccessFromUtlSvr"].openstack_networking_secgroup_rule_v2.ingress_rules["103070"]
module.security-groups["Chm-AccessFromUtlSvr"].openstack_networking_secgroup_v2.sg
module.security-groups["Platform-SG"].openstack_networking_secgroup_rule_v2.egress_rules["100000"]
module.security-groups["Platform-SG"].openstack_networking_secgroup_rule_v2.egress_rules["100010"]
module.security-groups["Platform-SG"].openstack_networking_secgroup_rule_v2.egress_rules["100020"]
module.security-groups["Platform-SG"].openstack_networking_secgroup_rule_v2.egress_rules["100030"]
module.security-groups["Platform-SG"].openstack_networking_secgroup_rule_v2.egress_rules["100040"]
module.security-groups["Platform-SG"].openstack_networking_secgroup_rule_v2.egress_rules["101000"]
module.security-groups["Platform-SG"].openstack_networking_secgroup_rule_v2.egress_rules["102000"]
module.security-groups["Platform-SG"].openstack_networking_secgroup_rule_v2.egress_rules["103000"]
module.security-groups["Platform-SG"].openstack_networking_secgroup_rule_v2.ingress_rules["100000"]
module.security-groups["Platform-SG"].openstack_networking_secgroup_v2.sg
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["100000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["101000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["102000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["103000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["104000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["105000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["106000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["107000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["108000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["109000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["110000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["111000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["112000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["113000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["113010"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["113020"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["114000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["115000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["116000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["117000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["119000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["119010"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["120000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["120010"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["121000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["122000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["130000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["131000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["132000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["133000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["134000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["135000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["136000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["137000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["138000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["139000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["140000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["141000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["142000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["143000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["144000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["145000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["146000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["147000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["148000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["149000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["150000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.egress_rules["151000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.ingress_rules["100000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.ingress_rules["101000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.ingress_rules["102000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.ingress_rules["103000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.ingress_rules["104000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.ingress_rules["105000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.ingress_rules["106000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.ingress_rules["107000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.ingress_rules["108000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.ingress_rules["109000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.ingress_rules["109010"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.ingress_rules["109020"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_rule_v2.ingress_rules["110000"]
module.security-groups["PrivateSG"].openstack_networking_secgroup_v2.sg?














Plan: 18 to add, 0 to change, 0 to destroy.
module.provider-network.openstack_networking_network_v2.generic: Creating...
╷
│ Error: Error creating openstack_networking_network_v2: Expected HTTP response code [201 202] when accessing [POST https://test.openstack.***.com:13696/v2.0/networks], but got 409 instead
│ {"NeutronError": {"type": "VlanIdInUse", "message": "Unable to create the network. The VLAN 1168 on physical network datacentre is in use.", "detail": ""}}
│ 
│   with module.provider-network.openstack_networking_network_v2.generic,
│   on .terraform/modules/provider-network/main.tf line 6, in resource "openstack_networking_network_v2" "generic":
│    6: resource "openstack_networking_network_v2" "generic" {
│ 
╵
time=2025-08-12T19:15:21Z level=error msg=terraform invocation failed in /gh-runner/_work/terraform-***cld-openstack/terraform-***cld-openstack/terraform-***cld-openstack/CustomerVPC/terraform/config/envs/non-prod/qa/test-2/to01/.terragrunt-cache/LVnBplEKxa4JGVjQ_6fqkfV9t20/VA3PJ6_NbE18hkpxgGxMPzEed4E prefix=[/gh-runner/_work/terraform-***cld-openstack/terraform-***cld-openstack/terraform-***cld-openstack/CustomerVPC/terraform/config/envs/non-prod/qa/test-2/to01] 
time=2025-08-12T19:15:21Z level=error msg=1 error occurred:
	* [/gh-runner/_work/terraform-***cld-openstack/terraform-***cld-openstack/terraform-***cld-openstack/CustomerVPC/terraform/config/envs/non-prod/qa/test-2/to01/.terragrunt-cache/LVnBplEKxa4JGVjQ_6fqkfV9t20/VA3PJ6_NbE18hkpxgGxMPzEed4E] exit status 1






we delete all th enetwork and roiuter uinterrfaces so caso we need to remove from stae list all og these or eaht






Fastest fix (import and reuse)
Import the existing provider network into the exact TF address that’s trying to create it:

bash
Copy
Edit
terraform state list | grep module.provider-network.openstack_networking_network_v2.generic || true
terraform import 'module.provider-network.openstack_networking_network_v2.generic' 3f0c25f8-fda8-47bf-8550-b7f21208988d
If your module also tries to create the subnet, import that too:

bash
Copy
Edit
terraform state list | grep module.provider-network.openstack_networking_subnet_v2 || true
terraform import 'module.provider-network.openstack_networking_subnet_v2.subnet' 3b80e294-b7de-47c0-8343-7e4c93d8125b
Plan and confirm no recreation:

bash
Copy
Edit
terraform plan
If plan shows changes to VLAN/physnet fields, remove those mutable args in the module (or add a lifecycle ignore) so TF won’t try to “edit” an already-existing external provider net.

If your module supports a toggle (even better)
Skip creating the provider network and just reference the ID:

h
Copy
Edit
# variables (example)
create_provider_network = false
provider_network_id     = "3f0c25f8-fda8-47bf-8550-b7f21208988d"
provider_subnet_id      = "3b80e294-b7de-47c0-8343-7e4c93d8125b"
Then:

bash
Copy
Edit
terragrunt apply   # or terraform apply
Quick validations (copy/paste)
bash
Copy
Edit
# Network really is the dedicated VLAN 1168 net
openstack network show 3f0c25f8-fda8-47bf-8550-b7f21208988d -c name -c router:external -c provider:physical_network -c provider:segmentation_id

# Subnet exists and matches
openstack subnet show 3b80e294-b7de-47c0-8343-7e4c93d8125b -c name -c network_id -c cidr
This keeps VLAN 1168 as the shared/dedicated bare-metal provider network and stops the 409 VlanIdInUse error.









Ask ChatGPT
so





ChatGPT can make mistakes. Check important info.
